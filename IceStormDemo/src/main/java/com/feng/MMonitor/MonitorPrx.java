// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `Monitor.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.feng.MMonitor;

public interface MonitorPrx extends Ice.ObjectPrx
{
    public void report(Measurement m);

    public void report(Measurement m, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_report(Measurement m);

    public Ice.AsyncResult begin_report(Measurement m, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_report(Measurement m, Ice.Callback __cb);

    public Ice.AsyncResult begin_report(Measurement m, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_report(Measurement m, Callback_Monitor_report __cb);

    public Ice.AsyncResult begin_report(Measurement m, java.util.Map<String, String> __ctx, Callback_Monitor_report __cb);

    public Ice.AsyncResult begin_report(Measurement m,
                                        IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_report(Measurement m,
                                        IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_report(Measurement m,
                                        java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_report(Measurement m,
                                        java.util.Map<String, String> __ctx,
                                        IceInternal.Functional_VoidCallback __responseCb,
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb,
                                        IceInternal.Functional_BoolCallback __sentCb);

    public void end_report(Ice.AsyncResult __result);
}
